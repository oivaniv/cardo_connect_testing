<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="3" ignored="0" total="8" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="469" started-at="2019-03-20T14:33:22Z" finished-at="2019-03-20T14:33:23Z">
    <groups>
    </groups>
    <test name="test1" duration-ms="469" started-at="2019-03-20T14:33:22Z" finished-at="2019-03-20T14:33:23Z">
      <class name="samples.SampleTest">
        <test-method status="PASS" signature="firstTest()[pri:0, instance:samples.SampleTest@18230356]" name="firstTest" duration-ms="122" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstTest -->
        <test-method status="FAIL" signature="secondTest()[pri:0, instance:samples.SampleTest@18230356]" name="secondTest" duration-ms="8" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [2]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at samples.SampleTest.secondTest(SampleTest.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method status="PASS" signature="thirdTest()[pri:0, instance:samples.SampleTest@18230356]" name="thirdTest" duration-ms="4" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdTest -->
      </class> <!-- samples.SampleTest -->
      <class name="samples.SecondTestFile">
        <test-method status="FAIL" signature="example1()[pri:0, instance:samples.SecondTestFile@d8305c2]" name="example1" duration-ms="5" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This test should be failed expected [3] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This test should be failed expected [3] but found [2]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at samples.SecondTestFile.example1(SecondTestFile.java:10)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example1 -->
        <test-method status="PASS" signature="example2()[pri:0, instance:samples.SecondTestFile@d8305c2]" name="example2" duration-ms="3" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example2 -->
        <test-method status="PASS" signature="example3()[pri:0, instance:samples.SecondTestFile@d8305c2]" name="example3" duration-ms="4" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example3 -->
        <test-method status="FAIL" signature="example4()[pri:0, instance:samples.SecondTestFile@d8305c2]" name="example4" duration-ms="4" started-at="2019-03-20T14:33:23Z" finished-at="2019-03-20T14:33:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[This test should be failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: This test should be failed
at org.testng.Assert.fail(Assert.java:96)
at samples.SecondTestFile.example4(SecondTestFile.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example4 -->
        <test-method status="SKIP" signature="skippedByDependencyTest()[pri:0, instance:samples.SecondTestFile@d8305c2]" name="skippedByDependencyTest" duration-ms="0" started-at="2019-03-20T14:33:23Z" depends-on-methods="samples.SecondTestFile.example1" finished-at="2019-03-20T14:33:23Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SecondTestFile.skippedByDependencyTest()[pri:0, instance:samples.SecondTestFile@d8305c2] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SecondTestFile.skippedByDependencyTest()[pri:0, instance:samples.SecondTestFile@d8305c2] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skippedByDependencyTest -->
      </class> <!-- samples.SecondTestFile -->
    </test> <!-- test1 -->
  </suite> <!-- Suite1 -->
</testng-results>
